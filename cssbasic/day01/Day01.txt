1、CSS3概述
2、CSS3语法
3、尺寸 与 边框
===========================================
1、CSS3概述
	1、问题
		1、设置页面中所有的文本颜色为红色
		2、设置页面中所有div的文本的颜色为蓝色
		3、将所有的div的文本的颜色改为黄色

		HTML对样式修改的缺点：
			1、相同的效果，在不同标签中用的时不同的属性
				<body text="red">
				<font color="blue">
			2、相同效果只能通过复制代码来完成
				可维护性比较低可重用性比较低
	2、CSS
		1、作用：
			以统一的方式完成相同的页面效果，并且能够提升可重用性和可维护性
		2、什么是CSS
			CSS:Cascading Style Sheets , 层叠样式表，或级联样式表，或 样式表
			特点：
				1、实现页面内容(html)与样式(css)相分离
				2、提高代码的可重用性和可维护性
		3、CSS 与 HTML 之间的关系
			1、HTML
				用于构建网页结构，实现页面内容
			2、CSS
				只负责修饰网页的样式

			HTML属性 与 CSS之间相冲突时怎么办？
				W3C推荐尽量使用CSS来取代HTML属性
				HTML所特有的属性只能用HTML，无法被CSS所取代
2、CSS语法
	1、CSS样式表的使用方式(重要)
		1、内联方式
			又称为 ：行内样式
			特点：将样式定义在某html元素中(style属性中)
			语法：
			<标记 style="样式声明1;样式声明2;"></标记>
				样式声明：
					样式属性 以及 属性值 来组成
					样式属性 和 值之间用 : 连接
				ex:
					1、文本颜色
						属性：color
						值：颜色的英文表示方式
						color:red;
						color:green;
					2、背景颜色
						属性：background-color
						值：颜色的英文表示方式
						background-color:yellow;

						color:green;background-color:blue;
					3、文字大小
						属性：font-size
						值：以px 或 pt 为单位的数字
						font-size:12px;

					4、练习
						<div style="color:red;background-color:yellow;font-size:24px;">锄禾日当午</div>
						<div>汗滴禾下土</div>
						修饰以上文本
							文本颜色为(color) 红色(red)
							背景颜色为(background-color) 黄色(yellow)
							文字大小为(font-size) 24px
		2、内部样式表
			特点：
				以独立的方式，定义页面元素的样式(元素 与 样式相分离)，并且能够让样式应用在多个元素中(提升可重用性 和 可维护性)
			
			语法：
				1、在 <style> 元素中进行编写
					<head>
						<style>
							... ...
						</style>
					</head>
				2、由若干样式规则来组成
					样式规则：能够应用在某些元素上的一组样式声明

					样式规则语法：
						由 选择器 和 若干样式声明 组成

						选择器：规范了页面中哪些元素能够使用定义好的样式,如 元素选择器

						选择器{
							样式声明1; (属性:值)
							样式声明2; (属性:值)
							...
							样式声明n; (属性:值)
						}
						ex:
							p{
								color:red;
								background-color:yellow;
								font-size:24px;
							}
							div{
								font-size:48px;
							}
		3、外部样式表
			特点：
				将样式定义在外部独立的css文件中(*.css)
				哪个页面想使用，可以引入css文件
			步骤：
				1、创建css文件，并编写样式规则
					样式规则：
						选择器 和 若干样式声明组成
				2、在页面中引入样式表文件
					<head>
						<link rel="stylesheet" type="text/css" href="css文件URL">
					</head>
	2、CSS语法规范
		1、样式表的特征
			1、继承性
				大部分的样式属性是可以被继承的
			2、层叠性
				可以为一个元素定义多个样式规则 或 样式声明,只要 样式声明 不冲突时，那么所有的样式声明都可以应用到元素上
			3、优先级
				层叠性基础上，如果样式声明冲突的话，则按照样式规则的优先级来进行样式的使用

				优先级：
				低      浏览器缺省设置(User Agent)
				中      内部样式表 或 外部样式表
					-就近原则,即后定义者优先
				高      内联方式
			4、!important规则
				显示调整样式属性的优先级
				语法：
					属性:值 !important;
	3、选择器(重点)
		1、作用
			规范页面中哪些元素能够使用声明好的样式
			起始选择器也是为了匹配页面中的元素
		2、选择器的详解
			1、通用选择器
				目的：为了匹配页面中所有的元素
				语法：*{样式声明;}
				特点：
					匹配页面所有的元素
					效率低
			2、元素选择器
				目的：为了匹配指定标记的元素
				语法：标记名{样式声明;}
				ex:
					div{color:red;}
					p{font-size:14px;}
			3、类选择器(重点)
				作用：允许被任何一个元素的class属性进行引用的选择器
				语法：.类名{样式声明;}
					注意：
						类名 允许包含字母，数字，_，-
						不允许以数字开头
					引用：通过任意元素的class属性进行引用
						<标记 class="类名"></标记>
				特殊用法：
					1、多类选择器的引用方式
						允许一个元素同时引用多个选择器
						<标记 class="class1 class2 classn">
					
					2、分类选择器的定义方式
						允许将 元素选择器 和 类选择器放在一起进行声明定义。以便达到对某种元素中不同样式的细分控制
						语法：
							元素选择器.类选择器{样式声明;}
							div.redColor{
								/*声明定义 class为redColor的div元素的样式 */
							}
			4、id选择器
				作用：与元素id相关，专门定义指定id值的元素的样式
				语法：#idValue{样式声明;}
			5、群组选择器
				作用：将多个选择器放在一起，统一声明样式
				语法：选择器1,选择器2,选择器3{}
				ex:
					#top,.redColor,span,.heavy,div.important{
						color:blue;
					}

					等同于：

					#top{color:blue;}
					.redColor{color:blue;}
					span{color:blue;}
					.heavy{color:blue;}
					div.important{color:blue;}
			6、后代选择器
				不限制层级关系的元素(出现在某元素中的)，称之为后代
				语法：
					选择器1 选择器2{}
					ex
						div span{
							/*匹配 div 中 所有的 span*/
						}

						#d1 span{
							/*匹配 id为d1元素中所有的span */
						}

						#d1 .span1{
							/*匹配 id为d1 中的 所有的 class为 span1的元素*/
						}
			7、子代选择器
				只具备一层层级关系的元素，称之为子代
				语法：
					选择器1>选择器2{}
				ex:
					div>span{
						/*匹配 div 中的下一级 span元素*/
					}
					#d1>span{
						/*匹配 id为d1 的下一级 span元素*/
					}
			8、伪类选择器
				作用：匹配元素不同状态的
				语法：
					:伪类{}
					a:伪类{}
					#d1:伪类{}
				伪类详解：
					1、链接伪类
						1、:link
							适用于 未被访问的 链接的状态
						2、:visited
							适用于 访问过的 链接的状态
					2、动态伪类
						1、:hover
							适用于鼠标悬停在元素上的状态
						2、:active
							适用于元素被激活时的状态
						5、:focus
							适用于元素获取焦点时的状态
					(后续课程中...)
					3、目标伪类
					4、元素状态伪类
					5、结构伪类
					6、否定伪类

			注意：
				1、自定的选择器中的样式 永远都会覆盖 继承的样式(不看权值)
3、尺寸 与 边框
	1、CSS单位
		1、尺寸单位
			1、%
			2、in
				1in = 2.54cm
			3、cm
				厘米
			4、mm
				毫米
			5、pt
				磅，1pt = 1/72in
				多用于文字大小的描述
			6、px
				像素
				1024px * 768px
			7、em
				倍数，1em 相当于父元素默认大小
			8、rem
				相对于根元素(html)设置的字体大小来指定倍数
		2、颜色单位(取值)
			1、rgb(r,g,b)
				r:red,0~255
				g:green,0~255
				b:blue,0~255
				ex:
					color:rgb(128,12,6);
			2、rgb(r%,g%,b%)
			3、rgba(r,g,b,alpha)
				alpha : 透明度 0~1 之间的数字
			4、#rrggbb
				通过6位16进制数字表示一种颜色
				每位数字的范围：0-9,A-F
				#aabbcc
			5、#rgb
				#rrggbb的缩写形式
				只有在 每两位数字都相同的情况下可以使用简写

				#ff0000  -> #f00
				#ffaacd  -> 无简写
			6、颜色的英文表示法
	2、尺寸属性
		1、作用
			设置元素的宽度和高度
			取值单位一般为 px 或 %
		2、语法
			1、宽度
				width
				max-width
				min-width
			
			2、高度
				height
				max-height
				min-height
		3、页面中哪些元素允许修改尺寸
			1、所有的块级元素都能修改尺寸
				div,p,pre,h1~h6,ul,li,ol,dl,dt,dd,
			2、大部分行内块元素允许修改尺寸
				input 元素为 行内块元素，允许修改尺寸
				但是 radio和checkbox除外
			3、小部分行内元素允许修改尺寸
				html元素中 本身就具备 width 和 height 属性的行内元素允许修改尺寸，否则不能改
				如：img
		4、溢出
			1、什么是溢出
				当使用尺寸属性限制元素大小时，如果内容所需的空间大于元素本身空间，则会产生溢出的效果
			2、溢出处理属性 
				属性：
					overflow
					overflow-x : 横向溢出处理
					overflow-y : 纵向溢出处理
				取值：
					1、visible
						默认值，溢出可见
					2、hidden
						溢出隐藏
					3、scroll
						滚动，默认显示滚动条，内容溢出时，滚动条可用
					4、auto
						自动，只有在溢出的方向才会显示滚动条
	3、边框属性 
		1、边框属性
			1、简写属性
				通过一个属性设置 四个方向边框的 宽度，样式，颜色
				属性：border
				取值：width style color;
					1、width:边框宽度，以px为单位
					2、style:边框样式
						solid ：实线
						dotted ：点状虚线
						dashed ：线状虚线
					3、color:边框颜色
						取值为 颜色值 或 transparent(透明)
				ex:
					border:1px solid red;
				注意：
					1、border 取值为 none
						border:none; 取消边框
					2、为元素设置边框后，元素的占地面积会发生更改
			2、单方向设置
				只设置某一条边的 宽度，样式，颜色
				语法：
					border-方向:width style color;
					方向：top/right/bottom/left
			3、单属性设置
				语法：
					border-属性:值;
					属性：width/style/color
			4、单边单属性设置
				设置 某条边的某个属性值
				语法：
					border-方向-属性:值;
					方向：top/right/bottom/left
					属性：width/style/color






