1、渐变
2、文本格式化
3、表格
4、浮动
=====================================
1、渐变
	1、什么是渐变
		多种颜色之间平缓过度的显示效果
	2、渐变分类
		1、线性渐变(linear-gradient)
			按照直线的方式填充渐变颜色和方向
		2、径向渐变(radial-gradient)
			以圆的方式填充渐变效果(圆心位置，半径)
		3、重复渐变
			1、重复线性渐变
				repeating-linear-gradient
			2、重复径向渐变
				repeating-radial-gradient
	3、渐变中的重要信息
		1、色标
			由 颜色 及其 出现的位置 来组成的
	4、渐变的语法
		1、属性
			background-image
		2、取值
			1、linear-gradient()
				linear-gradient(angle,color-point1,color-point2);
				1、angle
					填充的方向或角度
					1、关键字
						1、to top ：从下向上填充
						2、to right ：从左向右填充
						3、to bottom ：从上向下填充
						4、to left ：从右向左填充
					2、角度
						0deg ~ 360deg

						0deg : to top
						90deg : to right
						180deg : to bottom
						270deg : to left
				2、color-point
					渐变中的色标,由 颜色 及其 出现的位置组成
					ex:
						1、red 0px
							该色标颜色为 red ，位置为填充方向的 0px 处
						2、green 50px
							该色标颜色为 green,位置为填充方向的 50px 处
						3、blue 50%
							该色标颜色为 blue，位置为填充方向的 50% 处
						4、
							linear-gradient(to top,red,blue,green);
							自动分配位置
			2、radial-gradient()
				radial-gradient([size at position,]color-point,color-point)

				1、[size at position,] : 允许被省略
					size:圆的半径
					at : 关键字
					position:圆心的位置
						1、x y
							以px为单位的具体数值
						2、x% y%
						3、关键字
							x : left , center , right
							y : top , center, bottom
			3、repeating-linear-gradient()
			4、repeating-radial-gradient()
	5、浏览器兼容性问题
		主流浏览器都支持渐变
		对于不支持的浏览器，需要添加浏览器前缀的方式实现兼容性
			浏览器前缀：
				1、Firefox ：-moz-
				2、Chrome 和 Safari ：-webkit-
				3、Opear ：-o-
				4、Microsoft IE ：-ms-
			如果浏览器不支持属性的话，则将前缀添加到属性名称前
				ex:
					animation:值;
					-moz-aniamtion:值;
					-webkit-aniamtion:值;
					-o-aniamtion:值;
					-ms-animation:值;
			如果浏览器支持属性，但不支持属性值的话，则将前缀添加到属性值前
				ex:
					background-image:linear-gradient();
					background-image:-moz-linear-gradient();
					background-image:-webkit-linear-gradient();
					background-image:-o-linear-gradient();
					background-image:-ms-linear-gradient();
2、文本格式化
	1、字体属性
		1、指定字体
			属性：font-family
			取值：字体1,字体2,字体3;
			注意：字体中包含中文或特殊字符的话，尽量使用 "" 引起来 
			ex:
				font-family:"微软雅黑",Arial;
		2、字体大小
			属性：font-size
			取值：px 或 pt 为单位的数值
		3、字体加粗
			属性：font-weight
			取值：
				1、normal
					非加粗显示，正常体
				2、bold
					加粗显示 <b></b>
				3、400 ~ 900
					400 ：normal
					900 ：bold
		4、字体样式
			属性：font-style
			取值：
				1、normal
					正常体
				2、italic
					斜体 <i></i>
		5、小型大写字符
			效果：将小写英文字符变成大写，但是大小和小写字符一样
			属性：font-variant
			取值：
				1、normal
					正常，默认值
				2、small-caps
					小型大写字符
		6、字体属性
			属性：font
			取值：style variant weight size family;
			注意：该简写属性中，必须包含 family 的值
	2、文本属性
		1、文本颜色
			属性：color
			取值：~
		2、文本排列
			作用：控制内容的的水平对齐方式
			属性：text-align
			取值：left/center/right/justify(两端对齐)
		3、文本修饰
			线条修饰
			属性：text-decoration
			取值：
				1、none
					无线条修饰
				2、underline
					显示下划线
				3、line-through
					显示删除线 <s></s>
				4、overline
					显示上划线
		4、行高
			作用：一行数据的高度
			属性：line-height
			取值：以px为单位 或 当前字体大小的倍数
				line-height:50px;
				line-height:1.5;
			注意：文字将在指定行高的范围内垂直居中显示
			场合：
				1、文字垂直居中
				2、行间距的设置
		5、文本阴影
			属性：text-shadow
			取值：h-shadow v-shadow blur color;
3、表格
	1、表格常用属性
		1、边距属性
			padding，margin(不能为td设置margin)
		2、尺寸属性
			width,height
		3、文本格式化属性
			font-*,text-*,line-height,color,... ...
		4、背景属性
			颜色，图片，渐变
		5、border属性
		6、垂直方向对齐
			属性：vertical-align
			取值：top / middle / bottom
	2、表格特有属性
		1、边框合并属性
			属性：border-collapse
			取值：
				1、separate
					默认值
				2、collapse
					合并
		2、边框边距
			类似于 cellspacing
			属性：border-spacing
			取值：
				1、指定1个值
					每个单元格的水平和垂直间距相同
				2、指定2个值
					第一个值，表示水平间距
					第二个值，表示垂直间距
			注意：
				必须保证border-collapse是separate时才有效
		3、标题位置
			默认情况下，标题表格上方，水平居中
			属性：caption-side
			取值：
				1、top
					默认值
				2、bottom
					底部
		4、显示规则
			作用：指定浏览器如何来布局一张表格(指定行和列的尺寸的计算模式)
			属性：table-layout
			取值：
				1、auto
					自动，即自动表格布局，默认值
					列的宽度高度实际上是由内容来决定的
				2、fixed
					固定，即固定表格布局。
					列的宽度和高度由设定的值决定
			自动表格布局 VS 固定表格布局
				1、自动表格布局
					1、单元格的大小会适应内容
					2、表格复杂时，加载速度较慢(缺点)
					3、适用于不确定每列大小时使用
					4、特别灵活(优点)
				2、固定表格布局
					1、尺寸取决于设定的值，与单元格内容无关
					2、任何情况下，都会加速显示表格(优点)
					3、不够灵活(缺点)
			推荐：
				复杂的布局不能使用table
				简单，显示数据的布局，可以使用table
4、浮动
	1、定位
		改变元素在网页中的默认位置
	2、定位的分类
		按照定位效果，可以分为以下几种方式：
		1、普通流定位/文档流定位
		2、浮动定位
		3、相对定位
		4、绝对定位
		5、固定定位
	3、定位-普通流定位
		普通流定位，又称为 文档流定位，网页元素默认定位方式
		1、页面中所有元素都有自己的位置
		2、按照从左到右，从上到下的方式排列
		3、块级元素 - 从上到下排列
		4、行内/行内块 - 从左到右排列

		问题：让多个块级元素在一行内显示?
	4、定位 - 浮动定位
		1、浮动定位特点
			将元素设置为浮动定位，将具备以下特征
			1、会排除在文档流之外即"脱离文档流"，不再占据页面空间，后续元素则上前补位
			2、浮动元素只在当前行内浮动
			3、浮动元素会停靠在父元素的左边或右边或其他已浮动元素的边缘上
			4、浮动元素依然位于父元素之内
			5、解决问题-多个块级元素在一行内的显示问题
		2、语法
			属性：float
			取值：
				1、none
					默认值，即无任何浮动
				2、left
					元素左浮动
					停靠在父元素的左边 或 其他已浮动元素的右边上
				3、right
					元素右浮动
					停靠在父元素的右边 或 其他已浮动元素的左边上
		3、浮动引发的特殊效果
			1、当父元素容纳不下所有已浮动子元素，最后一个将换行显示(有可能被卡住)
			2、元素一旦浮动起来后，宽度将变成自适应(非手动指定情况下)
			3、元素一旦浮动起来后，都将变成块级元素
				块级：允许修改尺寸，允许设置上下margin
				行内元素：不能改尺寸，不能设置上下margin
			4、行内元素，行内块元素，文本 采用的是环绕的排列方式，无法被浮动元素压在底下






